// Simple Email Reporting System
export class EmailReporter {
    static async generateReport(activityData) {
        const today = new Date().toLocaleDateString();
        const stats = activityData.result;
        const report = `
ðŸ¤– AI Productivity Assistant - Daily Report
Date: ${today}

ðŸ“Š Today's Activity:
â€¢ Total AI Interactions: ${stats.totalInteractions}
â€¢ Screenshots Captured: ${stats.screenshotCount}
â€¢ Activities Logged: ${stats.activityCount}
â€¢ AI Model: ${stats.currentModel?.name || 'Loading...'}

âœ¨ AI Features Used:
â€¢ Grammar corrections and text improvements
â€¢ Content summarization
â€¢ Screenshot indexing for visual memory

ðŸ”’ Privacy: All AI processing happens on your device. No data leaves your computer without permission.

---
Generated by AI Productivity Assistant Chrome Extension
    `.trim();
        return report;
    }
    static async sendReport(report, recipientEmail) {
        try {
            // Simple mailto approach for basic functionality
            const subject = encodeURIComponent('AI Productivity Assistant - Daily Report');
            const body = encodeURIComponent(report);
            const mailtoUrl = `mailto:${recipientEmail}?subject=${subject}&body=${body}`;
            // Open default email client
            chrome.tabs.create({ url: mailtoUrl });
            return true;
        }
        catch (error) {
            console.error('Error sending email report:', error);
            return false;
        }
    }
    static async scheduleReport(frequency) {
        // Simple scheduling using chrome.alarms
        const alarmName = `email-report-${frequency}`;
        const delayInMinutes = frequency === 'daily' ? 1440 : 10080; // 24 hours or 7 days
        chrome.alarms.create(alarmName, {
            delayInMinutes,
            periodInMinutes: delayInMinutes
        });
        console.log(`Scheduled ${frequency} email reports`);
    }
}
//# sourceMappingURL=email-reporter.js.map